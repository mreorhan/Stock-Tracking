//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestDevx.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class STOK_TAKIPEntities : DbContext
    {
        public STOK_TAKIPEntities()
            : base("name=STOK_TAKIPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<loanDetail> loanDetails { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<purchase> purchases { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<userType> userTypes { get; set; }
    
        public virtual int createNewProduct(string productName, string productFeatures, string purchasedDate, Nullable<int> purchasedByID, Nullable<int> purchasedPrice, Nullable<int> pieces)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var productFeaturesParameter = productFeatures != null ?
                new ObjectParameter("productFeatures", productFeatures) :
                new ObjectParameter("productFeatures", typeof(string));
    
            var purchasedDateParameter = purchasedDate != null ?
                new ObjectParameter("purchasedDate", purchasedDate) :
                new ObjectParameter("purchasedDate", typeof(string));
    
            var purchasedByIDParameter = purchasedByID.HasValue ?
                new ObjectParameter("purchasedByID", purchasedByID) :
                new ObjectParameter("purchasedByID", typeof(int));
    
            var purchasedPriceParameter = purchasedPrice.HasValue ?
                new ObjectParameter("purchasedPrice", purchasedPrice) :
                new ObjectParameter("purchasedPrice", typeof(int));
    
            var piecesParameter = pieces.HasValue ?
                new ObjectParameter("pieces", pieces) :
                new ObjectParameter("pieces", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createNewProduct", productNameParameter, productFeaturesParameter, purchasedDateParameter, purchasedByIDParameter, purchasedPriceParameter, piecesParameter);
        }
    
        public virtual int addLoan(Nullable<int> userID, Nullable<int> loanByID, Nullable<int> productID, string loanDate, Nullable<int> loanPieces)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var loanByIDParameter = loanByID.HasValue ?
                new ObjectParameter("loanByID", loanByID) :
                new ObjectParameter("loanByID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            var loanDateParameter = loanDate != null ?
                new ObjectParameter("loanDate", loanDate) :
                new ObjectParameter("loanDate", typeof(string));
    
            var loanPiecesParameter = loanPieces.HasValue ?
                new ObjectParameter("loanPieces", loanPieces) :
                new ObjectParameter("loanPieces", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addLoan", userIDParameter, loanByIDParameter, productIDParameter, loanDateParameter, loanPiecesParameter);
        }
    
        public virtual int removeProduct(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("removeProduct", productIDParameter);
        }
    
        public virtual ObjectResult<loginCheck_Result> loginCheck(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<loginCheck_Result>("loginCheck", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<list_Result> list(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<list_Result>("list", productIDParameter);
        }
    
        public virtual int addUser(string name, string lastName, string username, string password, Nullable<int> userType)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addUser", nameParameter, lastNameParameter, usernameParameter, passwordParameter, userTypeParameter);
        }
    
        public virtual int editProduct(Nullable<int> productID, string productName, string productFeatures, Nullable<int> productPiece)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var productFeaturesParameter = productFeatures != null ?
                new ObjectParameter("productFeatures", productFeatures) :
                new ObjectParameter("productFeatures", typeof(string));
    
            var productPieceParameter = productPiece.HasValue ?
                new ObjectParameter("productPiece", productPiece) :
                new ObjectParameter("productPiece", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editProduct", productIDParameter, productNameParameter, productFeaturesParameter, productPieceParameter);
        }
    
        public virtual ObjectResult<getLoanbyUserID_Result> getLoanbyUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLoanbyUserID_Result>("getLoanbyUserID", userIDParameter);
        }
    
        public virtual ObjectResult<getLoanbyUserID2_Result> getLoanbyUserID2(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLoanbyUserID2_Result>("getLoanbyUserID2", userIDParameter);
        }
    
        public virtual int undoProduct(Nullable<int> userID, Nullable<int> productID, Nullable<int> piece)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(int));
    
            var pieceParameter = piece.HasValue ?
                new ObjectParameter("piece", piece) :
                new ObjectParameter("piece", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("undoProduct", userIDParameter, productIDParameter, pieceParameter);
        }
    
        public virtual ObjectResult<getLoanbyUserID3_Result> getLoanbyUserID3(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLoanbyUserID3_Result>("getLoanbyUserID3", userIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int editUser(Nullable<int> userID, string username, string password)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editUser", userIDParameter, usernameParameter, passwordParameter);
        }
    }
}
